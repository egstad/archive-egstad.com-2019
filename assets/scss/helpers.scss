.visually-hidden {
  @include visually-hidden()
}


// menu and tag toggle!
.toggle {
  transition: background $trans-duration $trans-ease;
  @include reset-appearance();
  width: calc(24px + 2vw);
  height: calc(24px + 2vw);
  min-width: 48px;
  max-width: 54px;
  min-height: 48px;
  max-height: 54px;
  background: rgba(var(--color-foreground), 0.25);
  border-radius: 100%;
  cursor: pointer;
  margin-right: calc(5px + 0.2vw);
  outline: 0;

  &:hover,
  &:focus {
    transition-duration: 200ms;
    background: var(--foreground);

    .fill {
      transition-duration: 200ms;
      fill: var(--background);
    }
  }

  // position inner svgs
  display: flex;
  align-items: center;
  justify-content: center;

  .svg {
    display: block;
    width: 40%;
  }

  .fill {
    transition: fill $trans-duration $trans-ease;
    fill: var(--foreground);
  }
}

/* Keyboard focus state only!
   ========================================================================== */
.tab-focus {
  /* Removing default outline only after we've added our custom one */
  &:focus,
  .tab-focus__content:focus {
      outline: none;
  }

  /* Removing the focus ring styles specifically for button in Firefox */
  &:not(:-moz-focusring):focus > .tab-focus__content {
    box-shadow: none;
  }

  /* Fixing the Safari bug for `<button>`s overflow */
  .tab-focus__content {
    position: relative;
  }

  // /* All the states on the inner element */
  // &:hover > .tab-focus__content {
  //   background: blue;
  // }

  // &:active > .tab-focus__content {
  //   background: darkorange;
  // }

  &:focus > .tab-focus__content {
    box-shadow: 0 0 20px 7px var(--foreground);
  }
}




/* Fills & Overlays
   ========================================================================== */

   .cover,
   .screen {
       overflow: hidden;
       top: 0;
       left: 0;
   
       width: 100%;
       height: 100%;
   }
   
   .cover {
       position: absolute;
   
       &.can-scroll {
           overflow-y: scroll;
           -webkit-overflow-scrolling: touch;
       }
   }
   
   .screen {
       position: fixed;
       z-index: 1;
   }
   



/* Basic fade transition for vue <transition>
   ========================================================================== */
.fade-enter-active,
.fade-leave-active {
  transition: opacity $trans-duration $trans-ease;
}

.fade-enter,
.fade-leave-to {
  opacity: 0;
}
